{"version":3,"sources":["base/_variables.scss","pages/ui_guide.css","pages/ui_guide.scss","base/_mixin.scss","../../../node_modules/rfs/scss.scss"],"names":[],"mappings":"AAAA;;oBCEoB;ADEpB,uMAAA;AAYA,cAAA;AAKA,qBAAA;AAKA,oBAAA;AAeA,oBAAA;AAKA,sBAAA;AAKA,qBAAA;AAKA,gBAAA;AEjDG,gCC4FD,SAAS,EACT,UAAU,EACV,gBAAgB,EAAA;;AD9FhB,gBACE,eAAe,EACf,MAAM,EACN,UAAU,EACV,WAAW,EACX,YAAY,EACZ,gBAAgB,EAAA;;AANjB,2BAQG,aAAa,EACb,YAAY,EAAA;;AATf,+BAWK,aAAa,EACb,mBAAmB,EACnB,eAAe,EACf,eAAe,EACf,qBAAqB,EACrB,YAAY,EAAA;;AAhBjB,gCAoBK,aAAa,EACb,eAAe,EACf,mBAAmB,EAAA;;AAtBxB,mCAwBO,YAAY,EAAA;;AAxBnB,qCA0BS,aAAa,EACb,mBAAmB,EACnB,YAAY,EACZ,eAAe,EACf,eAAe,EACf,gBAAgB,EAChB,qBAAqB,EACrB,YAAY,EAAA;;AAjCrB,4CAmCW,mBAAmB,EACnB,WAAW,EAAA;;AAOvB,iBACE,cAAc,EACd,aAAa,EAAA;;AAFd,sBEuPK,iCAf6B,EFnO/B,uBAAuB,EAAA;;AEgFzB,6BFrFD,sBE8PK,eAlF6B,EAAA,EFtKhC;;AAEH,iBACE,iBAAiB,EACjB,iBAAiB,EAAA;;AAFlB,sBAIG,eAAe,EACf,6BAA6B,EE0O3B,iCAf6B,EFzN/B,gBAAgB,EAChB,sBAAsB,EAAA;;AEqExB,6BF7ED,sBEsPK,eAlF6B,EAAA,EF3JhC;;AAEH,iBACE,kBAAkB,EAClB,YAAY,EAAA;;AAFb,wBAIG,mBAAmB,EACnB,uBAAuB,EACvB,WAAW,EAAA;;AAMjB,UACE,mBAAmB,EAAA;;AADrB,eAGI,kBAAkB,EAClB,gBAAgB,EAChB,eAAe,EACf,gBAAgB,EAChB,kBAAkB,EAClB,YAAY,EAAA;;AARhB,sBAUM,WAAW,EACX,kBAAkB,EAClB,MAAM,EACN,OAAO,EACP,WAAW,EACX,yBAAyB,EACzB,wBAAwB,EACxB,YAAY,EACZ,kBAAkB,EAClB,aAAa,EAAA;;AAnBnB,oBAsBM,YAAY,EAAA;;AAGf,qBAEG,YAAY,EAAA;;AAGhB,iBACE,aAAa,EAAA;;AAEd,kBAEG,mBAAmB,EAAA;;AAnCzB,4BAwCM,gBAAgB,EAAA","file":"../../pages/ui_guide.css","sourcesContent":["/*------------------*\n# Variables\n*------------------*/\n\n/*\n * This file includes default variables to get going quickly on a project.\n * File includes:\n * - Base font family\n * - Base font sizes\n * - Heading spacing\n * - Paragraph spacing\n * - Base line height\n * - Base colors\n*/\n\n\n/*\n* Font path\n*/\n$font-path: \"/fonts\" !default;\n\n/*\n* Base font family\n*/\n$base-font-family: 'Noto', Arial, sans-serif !default;\n\n/*\n * Base font sizes\n*/\n$base-font-size: 1.25rem !default;\n\n// rfs package base font size\n// $rfs-base-value: $base-font-size;\n\n$h1-size: 36px !default;\n$h2-size: 28px !default;\n$h3-size: 24px !default;\n$h4-size: 20px !default;\n$h5-size: 16px !default;\n$h6-size: 14px !default;\n\n/*\n * Heading spacing\n*/\n$heading-spacing: 15px 0 10px !default;\n\n/*\n * Paragraph spacing\n*/\n$paragraph-spacing: 0 0 25px !default;\n\n/*\n * Base line height\n*/\n$base-line-height: 1.3 !default;\n\n/*\n * Base colors\n*/\n$color-white: #ffffff !default;\n$color-black: #000000 !default;\n\n$color-dark: #333 !default;\n\n\n// Breakpoint for responsive\n// Mobile first: min-width, PC first: max-width\n$breakpoints: (\n  'xs': ( max-width: 0 ),\n  'sm': ( max-width: 576px ),\n  'md': ( max-width: 768px ),\n  'lg': ( max-width: 992px ),\n  'xl': ( max-width: 1200px ),\n  'xxl': ( max-width: 1400px )\n) !default;","/*------------------*\n# Variables\n*------------------*/\n/* This file includes default variables to get going quickly on a project. File includes: - Base font family - Base font sizes - Heading spacing - Paragraph spacing - Base line height - Base colors */\n/* Font path */\n/* Base font family */\n/* Base font sizes */\n/* Heading spacing */\n/* Paragraph spacing */\n/* Base line height */\n/* Base colors */\n.guide-header .guide-nav-menu { margin: 0; padding: 0; list-style: none; }\n\n.guide-header { position: fixed; top: 0; z-index: 9; width: 100%; height: 50px; background: #333; }\n\n.guide-header .guide-nav { display: flex; height: 100%; }\n\n.guide-header .guide-nav > a { display: flex; align-items: center; padding: 0 20px; font-size: 14px; text-decoration: none; color: white; }\n\n.guide-header .guide-nav-menu { display: flex; flex-wrap: wrap; align-items: center; }\n\n.guide-header .guide-nav-menu li { height: 100%; }\n\n.guide-header .guide-nav-menu li a { display: flex; align-items: center; height: 100%; padding: 0 10px; font-size: 12px; font-weight: 500; text-decoration: none; color: white; }\n\n.guide-header .guide-nav-menu li a.active { background: #53c6f0; color: #000; }\n\n.guide-content { margin: 30px 0; padding: 20px; }\n\n.guide-content > h1 { font-size: calc(1.425rem + 2.1vw); letter-spacing: -0.1rem; }\n\n@media (min-width: 1200px) { .guide-content > h1 { font-size: 3rem; } }\n\n.guide-section { min-height: 800px; padding-top: 50px; }\n\n.guide-section > h2 { padding: 0 15px; border-bottom: 1px solid #ccc; font-size: calc(1.325rem + 0.9vw); line-height: .75; letter-spacing: -.1rem; }\n\n@media (min-width: 1200px) { .guide-section > h2 { font-size: 2rem; } }\n\n.guide-article { position: relative; margin: 15px; }\n\n.guide-article strong { line-height: 2.4rem; letter-spacing: -.05rem; color: #333; }\n\n.sample { margin-bottom: 15px; }\n\n.sample .col { position: relative; padding: 4px 8px; font-size: 12px; font-weight: 500; text-align: center; color: white; }\n\n.sample .col::after { z-index: -2; position: absolute; top: 0; left: 0; content: \"\"; background-color: #71a7c9; width: calc(100% - 16px); height: 100%; border-radius: 4px; margin: 0 8px; }\n\n.sample .col.w168 { width: 170px; }\n\n.sample-align .col { height: 96px; }\n\n.sample-valign { height: 112px; }\n\n.sample-bp .col { margin-bottom: 16px; }\n\n.sample.row-nogutter .col { padding: 4px 8px; }\n","// rfs https://www.npmjs.com/package/rfs\r\n@import \"../../../../node_modules/rfs/scss\";\r\n\r\n@import \"../base/variables\";\r\n@import \"../base/mixin\";\r\n\r\n.guide {\r\n  &-header {\r\n    position: fixed;\r\n    top: 0;\r\n    z-index: 9;\r\n    width: 100%;\r\n    height: 50px;\r\n    background: #333;\r\n    .guide-nav {\r\n      display: flex;\r\n      height: 100%;\r\n      > a {\r\n        display: flex;\r\n        align-items: center;\r\n        padding: 0 20px;\r\n        font-size: 14px;\r\n        text-decoration: none;\r\n        color: white;\r\n      }\r\n      &-menu {\r\n        @extend %listreset;\r\n        display: flex;\r\n        flex-wrap: wrap;\r\n        align-items: center;\r\n        li {\r\n          height: 100%;\r\n          a {\r\n            display: flex;\r\n            align-items: center;\r\n            height: 100%;\r\n            padding: 0 10px;\r\n            font-size: 12px;\r\n            font-weight: 500;\r\n            text-decoration: none;\r\n            color: white;\r\n            &.active {\r\n              background: #53c6f0;\r\n              color: #000;\r\n            }\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }\r\n  &-content {\r\n    margin: 30px 0;\r\n    padding: 20px;\r\n    > h1 {\r\n      @include font-size(3rem);\r\n      letter-spacing: -0.1rem;\r\n    }\r\n  }\r\n  &-section {\r\n    min-height: 800px;\r\n    padding-top: 50px;\r\n    > h2 {\r\n      padding: 0 15px;\r\n      border-bottom: 1px solid #ccc;\r\n      @include font-size(2rem);\r\n      line-height: .75;\r\n      letter-spacing: -.1rem;\r\n    }\r\n  }\r\n  &-article {\r\n    position: relative;\r\n    margin: 15px;\r\n    strong {\r\n      line-height: 2.4rem;\r\n      letter-spacing: -.05rem;\r\n      color: #333;\r\n    }\r\n  }\r\n}\r\n\r\n// grid sample\r\n.sample {\r\n  margin-bottom: 15px;\r\n  .col {\r\n    position: relative;\r\n    padding: 4px 8px;\r\n    font-size: 12px;\r\n    font-weight: 500;\r\n    text-align: center;\r\n    color: white;\r\n    &::after {\r\n      z-index: -2;\r\n      position: absolute;\r\n      top: 0;\r\n      left: 0;\r\n      content: \"\";\r\n      background-color: #71a7c9;\r\n      width: calc(100% - 16px);\r\n      height: 100%;\r\n      border-radius: 4px;\r\n      margin: 0 8px;\r\n    }\r\n    &.w168 {\r\n      width: 170px;\r\n    }\r\n  }\r\n  &-align {\r\n    .col {\r\n      height: 96px;\r\n    }\r\n  }\r\n  &-valign {\r\n    height: 112px;\r\n  }\r\n  &-bp {\r\n    .col {\r\n      margin-bottom: 16px;\r\n    }\r\n  }\r\n  &.row-nogutter {\r\n    .col {\r\n      padding: 4px 8px;\r\n    }\r\n  }\r\n} \r\n  \r\n","\r\n// @param {String} $breakpoint - Breakpoint name\r\n// @require $breakpoints\r\n@mixin bp($breakpoint) {\r\n  @if map-has-key($breakpoints, $breakpoint) {\r\n    @media #{inspect(map-get($breakpoints, $breakpoint))} {\r\n      @content;\r\n    }\r\n  }\r\n  @else {\r\n    @warn \"Unfortunately, no value could be retrieved from `#{$breakpoint}`. \"\r\n      + \"Available breakpoints are: #{map-keys($breakpoints)}.\";\r\n  }\r\n}\r\n\r\n// Font import\r\n@mixin font-face($name, $file, $weight: noraml, $style: normal) { \r\n  @font-face { \r\n    font-family: \"#{$name}\"; \r\n    src: \r\n      url('#{$font-path}/#{$file}.woff') format('woff'), \r\n      url('#{$font-path}/#{$file}.woff2') format('woff2'), \r\n      url('#{$font-path}/#{$file}.otf') format('opentype'); \r\n      font-weight: $weight; \r\n      font-style: $style; \r\n  } \r\n}\r\n\r\n\r\n// Aspect ratio (If support IE)\r\n@mixin aspect-ratio($w: 16, $h: 9, $gap: 0) {\r\n  position: relative;\r\n  > * {\r\n    position: absolute;\r\n    top: 0;\r\n    right: 0;\r\n    bottom: 0;\r\n    left: 0;\r\n    box-sizing: border-box;\r\n  }\r\n  &::before {\r\n    position: relative;\r\n    content: '';\r\n    display: block;\r\n    padding-top: calc(#{$h} / #{$w} * 100%);\r\n  }\r\n}\r\n\r\n// Text truncate\r\n// $lines : 행 수\r\n// Usage : \r\n// 1 line - @include ellipsis;\r\n// 3 line - @include ellipsis(3);\r\n@mixin ellipsis($lines: 1) {\r\n  @if $lines > 1  {\r\n    display: -webkit-box;\r\n    -webkit-line-clamp: $lines;\r\n    /* autoprefixer: off */\r\n    -webkit-box-orient: vertical;\r\n    /* autoprefixer: on */ \r\n    overflow: hidden;\r\n  } @else {\r\n    overflow: hidden;\r\n    text-overflow: ellipsis;\r\n    white-space: nowrap;\r\n    display: block;\r\n  }\r\n}\r\n\r\n// Arrow\r\n@mixin arrow($direction, $size, $color) {\r\n  content: \"\";\r\n  width: 0;\r\n  height: 0;\r\n  $directions: ('down', 'left', 'up', 'right');\r\n  $positions: ('top', 'right', 'bottom', 'left');\r\n  @each $position in $positions {\r\n    $index: index($positions, $position);\r\n    @if nth($directions, $index) == $direction {\r\n      border-#{$position}: $size solid $color;\r\n    } @else {\r\n      border-#{$position}: $size solid transparent;\r\n    }\r\n  }\r\n}\r\n\r\n// Usage\r\n// @extend %clearfix;\r\n// clearfix\r\n%clearfix {\r\n  &:after {\r\n    content: '';\r\n    display: table;\r\n    clear: both;\r\n  }\r\n}\r\n\r\n// ul, ol, dl list reset\r\n%listreset {\r\n  margin: 0;\r\n  padding: 0;\r\n  list-style: none;\r\n}","// stylelint-disable property-blacklist, scss/dollar-variable-default\n\n// SCSS RFS mixin\n//\n// Automated responsive values for font sizes, paddings, margins and much more\n//\n// Licensed under MIT (https://github.com/twbs/rfs/blob/main/LICENSE)\n\n// Configuration\n\n// Base value\n$rfs-base-value: 1.25rem !default;\n$rfs-unit: rem !default;\n\n@if $rfs-unit != rem and $rfs-unit != px {\n  @error \"`#{$rfs-unit}` is not a valid unit for $rfs-unit. Use `px` or `rem`.\";\n}\n\n// Breakpoint at where values start decreasing if screen width is smaller\n$rfs-breakpoint: 1200px !default;\n$rfs-breakpoint-unit: px !default;\n\n@if $rfs-breakpoint-unit != px and $rfs-breakpoint-unit != em and $rfs-breakpoint-unit != rem {\n  @error \"`#{$rfs-breakpoint-unit}` is not a valid unit for $rfs-breakpoint-unit. Use `px`, `em` or `rem`.\";\n}\n\n// Resize values based on screen height and width\n$rfs-two-dimensional: false !default;\n\n// Factor of decrease\n$rfs-factor: 10 !default;\n\n@if type-of($rfs-factor) != number or $rfs-factor <= 1 {\n  @error \"`#{$rfs-factor}` is not a valid  $rfs-factor, it must be greater than 1.\";\n}\n\n// Mode. Possibilities: \"min-media-query\", \"max-media-query\"\n$rfs-mode: min-media-query !default;\n\n// Generate enable or disable classes. Possibilities: false, \"enable\" or \"disable\"\n$rfs-class: false !default;\n\n// 1 rem = $rfs-rem-value px\n$rfs-rem-value: 16 !default;\n\n// Safari iframe resize bug: https://github.com/twbs/rfs/issues/14\n$rfs-safari-iframe-resize-bug-fix: false !default;\n\n// Disable RFS by setting $enable-rfs to false\n$enable-rfs: true !default;\n\n// Cache $rfs-base-value unit\n$rfs-base-value-unit: unit($rfs-base-value);\n\n@function divide($dividend, $divisor, $precision: 10) {\n  $sign: if($dividend > 0 and $divisor > 0 or $dividend < 0 and $divisor < 0, 1, -1);\n  $dividend: abs($dividend);\n  $divisor: abs($divisor);\n  @if $dividend == 0 {\n    @return 0;\n  }\n  @if $divisor == 0 {\n    @error \"Cannot divide by 0\";\n  }\n  $remainder: $dividend;\n  $result: 0;\n  $factor: 10;\n  @while ($remainder > 0 and $precision >= 0) {\n    $quotient: 0;\n    @while ($remainder >= $divisor) {\n      $remainder: $remainder - $divisor;\n      $quotient: $quotient + 1;\n    }\n    $result: $result * 10 + $quotient;\n    $factor: $factor * .1;\n    $remainder: $remainder * 10;\n    $precision: $precision - 1;\n    @if ($precision < 0 and $remainder >= $divisor * 5) {\n      $result: $result + 1;\n    }\n  }\n  $result: $result * $factor * $sign;\n  $dividend-unit: unit($dividend);\n  $divisor-unit: unit($divisor);\n  $unit-map: (\n    \"px\": 1px,\n    \"rem\": 1rem,\n    \"em\": 1em,\n    \"%\": 1%\n  );\n  @if ($dividend-unit != $divisor-unit and map-has-key($unit-map, $dividend-unit)) {\n    $result: $result * map-get($unit-map, $dividend-unit);\n  }\n  @return $result;\n}\n\n// Remove px-unit from $rfs-base-value for calculations\n@if $rfs-base-value-unit == px {\n  $rfs-base-value: divide($rfs-base-value, $rfs-base-value * 0 + 1);\n}\n@else if $rfs-base-value-unit == rem {\n  $rfs-base-value: divide($rfs-base-value, divide($rfs-base-value * 0 + 1, $rfs-rem-value));\n}\n\n// Cache $rfs-breakpoint unit to prevent multiple calls\n$rfs-breakpoint-unit-cache: unit($rfs-breakpoint);\n\n// Remove unit from $rfs-breakpoint for calculations\n@if $rfs-breakpoint-unit-cache == px {\n  $rfs-breakpoint: divide($rfs-breakpoint, $rfs-breakpoint * 0 + 1);\n}\n@else if $rfs-breakpoint-unit-cache == rem or $rfs-breakpoint-unit-cache == \"em\" {\n  $rfs-breakpoint: divide($rfs-breakpoint, divide($rfs-breakpoint * 0 + 1, $rfs-rem-value));\n}\n\n// Calculate the media query value\n$rfs-mq-value: if($rfs-breakpoint-unit == px, #{$rfs-breakpoint}px, #{divide($rfs-breakpoint, $rfs-rem-value)}#{$rfs-breakpoint-unit});\n$rfs-mq-property-width: if($rfs-mode == max-media-query, max-width, min-width);\n$rfs-mq-property-height: if($rfs-mode == max-media-query, max-height, min-height);\n\n// Internal mixin used to determine which media query needs to be used\n@mixin _rfs-media-query {\n  @if $rfs-two-dimensional {\n    @if $rfs-mode == max-media-query {\n      @media (#{$rfs-mq-property-width}: #{$rfs-mq-value}), (#{$rfs-mq-property-height}: #{$rfs-mq-value}) {\n        @content;\n      }\n    }\n    @else {\n      @media (#{$rfs-mq-property-width}: #{$rfs-mq-value}) and (#{$rfs-mq-property-height}: #{$rfs-mq-value}) {\n        @content;\n      }\n    }\n  }\n  @else {\n    @media (#{$rfs-mq-property-width}: #{$rfs-mq-value}) {\n      @content;\n    }\n  }\n}\n\n// Internal mixin that adds disable classes to the selector if needed.\n@mixin _rfs-rule {\n  @if $rfs-class == disable and $rfs-mode == max-media-query {\n    // Adding an extra class increases specificity, which prevents the media query to override the property\n    &,\n    .disable-rfs &,\n    &.disable-rfs {\n      @content;\n    }\n  }\n  @else if $rfs-class == enable and $rfs-mode == min-media-query {\n    .enable-rfs &,\n    &.enable-rfs {\n      @content;\n    }\n  }\n  @else {\n    @content;\n  }\n}\n\n// Internal mixin that adds enable classes to the selector if needed.\n@mixin _rfs-media-query-rule {\n\n  @if $rfs-class == enable {\n    @if $rfs-mode == min-media-query {\n      @content;\n    }\n\n    @include _rfs-media-query {\n      .enable-rfs &,\n      &.enable-rfs {\n        @content;\n      }\n    }\n  }\n  @else {\n    @if $rfs-class == disable and $rfs-mode == min-media-query {\n      .disable-rfs &,\n      &.disable-rfs {\n        @content;\n      }\n    }\n    @include _rfs-media-query {\n      @content;\n    }\n  }\n}\n\n// Helper function to get the formatted non-responsive value\n@function rfs-value($values) {\n  // Convert to list\n  $values: if(type-of($values) != list, ($values,), $values);\n\n  $val: '';\n\n  // Loop over each value and calculate value\n  @each $value in $values {\n    @if $value == 0 {\n      $val: $val + ' 0';\n    }\n    @else {\n      // Cache $value unit\n      $unit: if(type-of($value) == \"number\", unit($value), false);\n\n      @if $unit == px {\n        // Convert to rem if needed\n        $val: $val + ' ' + if($rfs-unit == rem, #{divide($value, $value * 0 + $rfs-rem-value)}rem, $value);\n      }\n      @else if $unit == rem {\n        // Convert to px if needed\n        $val: $val + ' ' + if($rfs-unit == px, #{divide($value, $value * 0 + 1) * $rfs-rem-value}px, $value);\n      }\n      @else {\n        // If $value isn't a number (like inherit) or $value has a unit (not px or rem, like 1.5em) or $ is 0, just print the value\n        $val: $val + ' ' + $value;\n      }\n    }\n  }\n\n  // Remove first space\n  @return unquote(str-slice($val, 2));\n}\n\n// Helper function to get the responsive value calculated by RFS\n@function rfs-fluid-value($values) {\n  // Convert to list\n  $values: if(type-of($values) != list, ($values,), $values);\n\n  $val: '';\n\n  // Loop over each value and calculate value\n  @each $value in $values {\n    @if $value == 0 {\n      $val: $val + ' 0';\n    }\n\n    @else {\n      // Cache $value unit\n      $unit: if(type-of($value) == \"number\", unit($value), false);\n\n      // If $value isn't a number (like inherit) or $value has a unit (not px or rem, like 1.5em) or $ is 0, just print the value\n      @if not $unit or $unit != px and $unit != rem {\n        $val: $val + ' ' + $value;\n      }\n\n      @else {\n        // Remove unit from $value for calculations\n        $value: divide($value, $value * 0 + if($unit == px, 1, divide(1, $rfs-rem-value)));\n\n        // Only add the media query if the value is greater than the minimum value\n        @if abs($value) <= $rfs-base-value or not $enable-rfs {\n          $val: $val + ' ' +  if($rfs-unit == rem, #{divide($value, $rfs-rem-value)}rem, #{$value}px);\n        }\n        @else {\n          // Calculate the minimum value\n          $value-min: $rfs-base-value + divide(abs($value) - $rfs-base-value, $rfs-factor);\n\n          // Calculate difference between $value and the minimum value\n          $value-diff: abs($value) - $value-min;\n\n          // Base value formatting\n          $min-width: if($rfs-unit == rem, #{divide($value-min, $rfs-rem-value)}rem, #{$value-min}px);\n\n          // Use negative value if needed\n          $min-width: if($value < 0, -$min-width, $min-width);\n\n          // Use `vmin` if two-dimensional is enabled\n          $variable-unit: if($rfs-two-dimensional, vmin, vw);\n\n          // Calculate the variable width between 0 and $rfs-breakpoint\n          $variable-width: #{divide($value-diff * 100, $rfs-breakpoint)}#{$variable-unit};\n\n          // Return the calculated value\n          $val: $val + ' calc(' + $min-width + if($value < 0, ' - ', ' + ') + $variable-width + ')';\n        }\n      }\n    }\n  }\n\n  // Remove first space\n  @return unquote(str-slice($val, 2));\n}\n\n// RFS mixin\n@mixin rfs($values, $property: font-size) {\n  @if $values != null {\n    $val: rfs-value($values);\n    $fluidVal: rfs-fluid-value($values);\n\n    // Do not print the media query if responsive & non-responsive values are the same\n    @if $val == $fluidVal {\n      #{$property}: $val;\n    }\n    @else {\n      @include _rfs-rule {\n        #{$property}: if($rfs-mode == max-media-query, $val, $fluidVal);\n\n        // Include safari iframe resize fix if needed\n        min-width: if($rfs-safari-iframe-resize-bug-fix, (0 * 1vw), null);\n      }\n\n      @include _rfs-media-query-rule {\n        #{$property}: if($rfs-mode == max-media-query, $fluidVal, $val);\n      }\n    }\n  }\n}\n\n// Shorthand helper mixins\n@mixin font-size($value) {\n  @include rfs($value);\n}\n\n@mixin padding($value) {\n  @include rfs($value, padding);\n}\n\n@mixin padding-top($value) {\n  @include rfs($value, padding-top);\n}\n\n@mixin padding-right($value) {\n  @include rfs($value, padding-right);\n}\n\n@mixin padding-bottom($value) {\n  @include rfs($value, padding-bottom);\n}\n\n@mixin padding-left($value) {\n  @include rfs($value, padding-left);\n}\n\n@mixin margin($value) {\n  @include rfs($value, margin);\n}\n\n@mixin margin-top($value) {\n  @include rfs($value, margin-top);\n}\n\n@mixin margin-right($value) {\n  @include rfs($value, margin-right);\n}\n\n@mixin margin-bottom($value) {\n  @include rfs($value, margin-bottom);\n}\n\n@mixin margin-left($value) {\n  @include rfs($value, margin-left);\n}\n"]}